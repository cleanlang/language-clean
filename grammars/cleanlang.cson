'scopeName': 'source.cleanlang'
'name': 'cleanlang'
'fileTypes': ['cl']

'patterns': [
    {
    'include': '#functions'
    }
    {
    'include': '#variable'
    }
    {
    'include': '#numbers'
    },
    {
    'include': '#boolean'
    },
    {
    'include': '#null'
    },
    {
    'include': '#strings'
    },
    {
    'include': '#comments'
    },
    {
    'include': '#keywords'
    },
    {
    'include': '#operators'
    }
    {
    'include': '#round'
    }
]
'repository':
  'numbers':
    'patterns': [
      {
       'match': '\\b(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((E|e)(\\+|-)?[0-9]+)?\\b'
       'name': 'constant.numeric.cleanlang'
      }
    ]
  'boolean':
    'patterns': [
      {
        'match': '\\b(true|false)\\b'
        'name': 'constant.language.boolean.cleanlang'
      }
    ]
  'null':
    'patterns': [
      {
        'match': '\\b(null)\\b'
        'name': 'constant.language.null.cleanlang'
      }
    ]
  'strings':
    'patterns': [
      {
        'begin': '\''
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.cleanlang'
        'end': '\''
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.cleanlang'
        'name': 'string.quoted.single.cleanlang'
      }
      {
        'include': '#string_escapes'
      }
      {
        'begin': '\"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.InvalidBegin.cleanlang'
        'end': '\"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.InvalidEnd.cleanlang'
        'name': 'invalid.illegal.string.cleanlang'
      }
    ]
  'string_escapes':
    'patterns': [
      {
        'match': '\\\\u(?![A-Fa-f0-9]{4}|{[A-Fa-f0-9]+})[^\'"]*'
        'name': 'invalid.illegal.unicode-escape.cleanlang'
      }
      {
        'match': '\\\\u(?:[A-Fa-f0-9]{4}|({)([A-Fa-f0-9]+)(}))'
        'name': 'constant.character.escape.cleanlang'
        'captures':
          '1':
            'name': 'punctuation.definition.unicode-escape.begin.bracket.curly.cleanlang'
          '2':
            'patterns': [
              {
                # Max codepoint: \u{10FFFF}
                'match': '[A-Fa-f\\d]{7,}|(?!10)[A-Fa-f\\d]{6}'
                'name': 'invalid.illegal.unicode-escape.cleanlang'
              }
            ]
          '3':
            'name': 'punctuation.definition.unicode-escape.end.bracket.curly.cleanlang'
      }
      {
        'match': '\\\\(x\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)'
        'name': 'constant.character.escape.cleanlang'
      }
    ]
  'comments':
    'patterns': [
      {
        'begin': '/\\*(.|\n)*'
        'end': '\\*/'
        'captures':
          '0':
            'name': 'punctuation.definition.comment.cleanlang'
            'name': 'comment.block.cleanlang'
      }
      {
        'begin': '//'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.comment.cleanlang'
        'end': '$'
        'name': 'comment.line.double-slash.cleanlang'
      }
    ]
  'operators':
    'patterns': [
      {
        'match': '!==|<=|>=|==|<|>'
        'name': 'keyword.operator.comparison.cleanlang'
      }
      {
        'match': '&&|!!|!|\\|\\|'
        'name': 'keyword.operator.logical.cleanlang'
      }
      {
        'match': '=|:'
        'name': 'keyword.operator.assignment.cleanlang'
      }
      {
        'match': '\\+\\+'
        'name': 'keyword.operator.concat.cleanlang'
      }
      {
        'match': '%|\\*|/|-|\\+'
        'name': 'keyword.operator.cleanlang'
      }
    ]
  'keywords':
    'patterns': [
      {
        'match': '\\b(if|then|else|in|let)\\b'
        'name': 'keyword.control.cleanlang'
      }
      {
        'match': '\\b(getLine|putLine|include|do|IO|defineProp|delete)\\b'
        'name': 'keyword.reserved.cleanlang'
      }
    ]
  'functions':
    'patterns': [
      {
        'begin': '^\\s*([A-Za-z_][A-Za-z0-9_]*)\\s+(?=(\\())'
        'beginCaptures':
          '1':
            'name': 'storage.type.function.cleanlang'
            'name': 'entity.name.function.cleanlang'
        'end': '(\\))\\s*(?:(\\=)|(.*$\\n?))'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.parameters.end.cleanlang'
          '2':
            'name': 'punctuation.section.function.begin.cleanlang'
          '3':
            'name': 'invalid.illegal.missing-section-begin.cleanlang'
      }
      {
        'match': '^\\s*([A-Za-z_][A-Za-z0-9_]*)\\s+(([A-Za-z_][A-Za-z0-9_]*\\s+)+)='
        'captures':
          '1':
            'name': 'storage.type.function.cleanlang'
            'name': 'entity.name.function.cleanlang'
          '2':
            'name': 'variable.parameter.function.cleanlang'
          '4':
            'name': 'keyword.operator.assignment.cleanlang'
      }
      {
        'match': '^\\s*([A-Za-z_][A-Za-z0-9_]*)\\s+(?:((([0-9]+\\.?[0-9]*)|(\\.[0-9]+))*\\s+)+)(=)'
        'captures':
          '1':
            'name': 'storage.type.function.cleanlang'
            'name': 'entity.name.function.cleanlang'
          '2':
            'name': 'constant.numeric.cleanlang'
      }
    ]
  'variable':
    'patterns': [
      {
        'match': '^\\s*([A-Za-z_][A-Za-z0-9_]*)\\s*='
        'captures':
          '1':
            'name': 'storage.type.constant.cleanlang'
      }
    ]
